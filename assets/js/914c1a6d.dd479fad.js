"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[9370],{94735:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var i=s(74848),r=s(28453);const t={},a="Image Analysis API",l={id:"api-specification/openAI",title:"Image Analysis API",description:"Processes an image input and generates a multiple-choice question (MCQ) based on its contents using OpenAI's GPT-4o model.",source:"@site/docs/api-specification/openAI.md",sourceDirName:"api-specification",slug:"/api-specification/openAI",permalink:"/project-piggyback-learning-team-1/docs/api-specification/openAI",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-piggyback-learning-team-1/edit/main/documentation/docs/api-specification/openAI.md",tags:[],version:"current",lastUpdatedBy:"ewongzz",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Presigned URL API",permalink:"/project-piggyback-learning-team-1/docs/api-specification/Presigned URL"},next:{title:"Test Procedures",permalink:"/project-piggyback-learning-team-1/docs/category/test-procedures"}},c={},d=[{value:"Instance Variables",id:"instance-variables",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Public API Methods",id:"public-api-methods",level:2},{value:"<code>POST /api/analyze-image</code>",id:"post-apianalyze-image",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Example Usage",id:"example-usage",level:4},{value:"Returns",id:"returns",level:4},{value:"Example Response (Success)",id:"example-response-success",level:4},{value:"Example Response (Error)",id:"example-response-error",level:4},{value:"Private Methods",id:"private-methods",level:2},{value:"<code>generateMCQ(String imageBuffer)</code>",id:"generatemcqstring-imagebuffer",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Example Usage",id:"example-usage-1",level:4},{value:"Implementation",id:"implementation",level:2},{value:"File: <code>src/app/api/analyze-image/route.ts</code>",id:"file-srcappapianalyze-imageroutets",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Notes",id:"notes",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"image-analysis-api",children:"Image Analysis API"}),"\n",(0,i.jsxs)(n.p,{children:["Processes an ",(0,i.jsx)(n.strong,{children:"image input"})," and generates a ",(0,i.jsx)(n.strong,{children:"multiple-choice question (MCQ)"})," based on its contents using OpenAI's GPT-4o model."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"instance-variables",children:"Instance Variables"}),"\n",(0,i.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"OPENAI_API_KEY"})," \u2013 The API key for authenticating requests to OpenAI's API."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"public-api-methods",children:"Public API Methods"}),"\n",(0,i.jsx)(n.h3,{id:"post-apianalyze-image",children:(0,i.jsx)(n.code,{children:"POST /api/analyze-image"})}),"\n",(0,i.jsx)(n.p,{children:"Analyzes the provided image and generates a multiple-choice question."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"imageBuffer"})}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"\u2705 Yes"}),(0,i.jsx)(n.td,{children:"Base64-encoded string representing the image content."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"example-usage",children:"Example Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const response = await fetch('/api/analyze-image', {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ imageBuffer: '<BASE64_IMAGE_STRING>' }),\n});\n\nconst data = await response.json();\nconsole.log(data.mcq); // Multiple-choice question generated from the image\n"})}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mcq"})}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"The generated multiple-choice question based on the image."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"error"})}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Error message if something goes wrong."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"example-response-success",children:"Example Response (Success)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mcq": "What object is most prominently displayed in the image?\\nA) Apple\\nB) Banana\\nC) Carrot\\nD) Orange"\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"example-response-error",children:"Example Response (Error)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": "No image provided."\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"private-methods",children:"Private Methods"}),"\n",(0,i.jsx)(n.h3,{id:"generatemcqstring-imagebuffer",children:(0,i.jsx)(n.code,{children:"generateMCQ(String imageBuffer)"})}),"\n",(0,i.jsx)(n.p,{children:"Processes the provided image and generates a multiple-choice question using OpenAI."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"imageBuffer"})}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Base64-encoded image data."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"A multiple-choice question based on the image."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"example-usage-1",children:"Example Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const mcq = generateMCQ('<BASE64_IMAGE_STRING>');\nconsole.log(mcq);\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsxs)(n.h3,{id:"file-srcappapianalyze-imageroutets",children:["File: ",(0,i.jsx)(n.code,{children:"src/app/api/analyze-image/route.ts"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import { OpenAI } from \'openai\';\n\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n\nexport async function POST(req) {\n  try {\n    const { imageBuffer } = await req.json();\n    if (!imageBuffer) {\n      throw new Error("No image provided.");\n    }\n\n    const completion = await openai.chat.completions.create({\n      model: "gpt-4o",\n      messages: [\n        {\n          role: "user",\n          content: [\n            { type: "text", text: "Analyze this image and generate a multiple-choice question based on its contents." },\n            { type: "image_url", image_url: { url: `data:image/png;base64,${imageBuffer}` } }\n          ]\n        }\n      ],\n    });\n\n    const mcq = completion.choices[0].message.content;\n\n    return new Response(\n      JSON.stringify({ mcq }),\n      { status: 200, headers: { "Content-Type": "application/json" } }\n    );\n  } catch (error) {\n    return new Response(\n      JSON.stringify({ error: "Error analyzing image", details: error.message }),\n      { status: 500, headers: { "Content-Type": "application/json" } }\n    );\n  }\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Error"}),(0,i.jsx)(n.th,{children:"Status Code"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"No Image Provided"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"400"})}),(0,i.jsxs)(n.td,{children:["The request must include an ",(0,i.jsx)(n.code,{children:"imageBuffer"})," parameter."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"OpenAI API Failure"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"500"})}),(0,i.jsx)(n.td,{children:"An error occurred while processing the image and generating the question."})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The API accepts ",(0,i.jsx)(n.strong,{children:"base64-encoded images"})," as input."]}),"\n",(0,i.jsxs)(n.li,{children:["Ensure ",(0,i.jsx)(n.strong,{children:"OPENAI_API_KEY"})," is correctly set in the environment variables."]}),"\n",(0,i.jsx)(n.li,{children:"The response is a text-based multiple-choice question derived from the image content."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(96540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);