"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7389],{48840:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=n(74848),s=n(28453);const r={sidebar_position:4},o="Unit Testing Framework for PigletPrep",a={id:"testing/testingMarch2nd",title:"Unit Testing Framework for PigletPrep",description:"httpsx:/g/personal/tuo91182templeedu/EQdbX-nRgcBBmlmtXoxjXWMBndkq-NNG0madjt8IM1XVCQ?rtime=oAHdBwRa3Ug",source:"@site/docs/testing/testingMarch2nd.md",sourceDirName:"testing",slug:"/testing/testingMarch2nd",permalink:"/project-piggyback-learning-team-1/docs/testing/testingMarch2nd",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-piggyback-learning-team-1/edit/main/documentation/docs/testing/testingMarch2nd.md",tags:[],version:"current",lastUpdatedBy:"Andrew Tran",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Acceptance test",permalink:"/project-piggyback-learning-team-1/docs/testing/acceptence-testing"}},l={},c=[{value:"1. Purpose",id:"1-purpose",level:2},{value:"2. Requirements",id:"2-requirements",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Library Explanation",id:"library-explanation",level:4},{value:"Execution of Tests",id:"execution-of-tests",level:4},{value:"Link to Test Coverage Report",id:"link-to-test-coverage-report",level:4},{value:"Integration Tests",id:"integration-tests",level:3},{value:"Testing Use Cases",id:"testing-use-cases",level:4},{value:"Automation of Tests",id:"automation-of-tests",level:4},{value:"Acceptance Test",id:"acceptance-test",level:3},{value:"Demonstrating Functional and Non-Functional Requirements",id:"demonstrating-functional-and-non-functional-requirements",level:4},{value:"Combination of Automated and Manual Testing",id:"combination-of-automated-and-manual-testing",level:4},{value:"Documentation of Results",id:"documentation-of-results",level:4}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"unit-testing-framework-for-pigletprep",children:"Unit Testing Framework for PigletPrep"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsxs)(t.a,{href:"https://tuprd-my.sharepoint.com/:x:/g/personal/tuo91182_temple_edu/EQdbX-nRgcBBmlmtXoxjXWMBndkq-NNG0madjt8IM1XVCQ?rtime=oAHdBwRa3Ug",children:["https://tuprd-my.sharepoint.com/","\u274c","/g/personal/tuo91182_temple_edu/EQdbX-nRgcBBmlmtXoxjXWMBndkq-NNG0madjt8IM1XVCQ?rtime=oAHdBwRa3Ug"]})}),"\n",(0,i.jsx)(t.h2,{id:"1-purpose",children:"1. Purpose"}),"\n",(0,i.jsx)(t.p,{children:"The Test Procedures describe the test approach and the tests to be performed to verify the requirements specified in the Requirements Document. This document provides a structured framework for unit testing, integration testing, and acceptance testing for the PigletPrep project."}),"\n",(0,i.jsx)(t.h2,{id:"2-requirements",children:"2. Requirements"}),"\n",(0,i.jsx)(t.p,{children:"This document outlines the procedures for the following tests:"}),"\n",(0,i.jsx)(t.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,i.jsx)(t.p,{children:"Unit testing ensures that individual components or functions work as expected in isolation. The following steps are required:"}),"\n",(0,i.jsx)(t.h4,{id:"library-explanation",children:"Library Explanation"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The selected unit testing library is ",(0,i.jsx)(t.strong,{children:"Jest"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Jest is chosen due to its simplicity, built-in mocking capabilities, and seamless integration with JavaScript/TypeScript projects."}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"execution-of-tests",children:"Execution of Tests"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Each method or function must have one or more corresponding test cases."}),"\n",(0,i.jsx)(t.li,{children:"A test case includes input parameters and expected results."}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"link-to-test-coverage-report",children:"Link to Test Coverage Report"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Most unit testing software provides the ability to export coverage reports in HTML."}),"\n",(0,i.jsxs)(t.li,{children:["To integrate with Docusaurus, the exported HTML report should be placed in the ",(0,i.jsx)(t.code,{children:"static"})," folder."]}),"\n",(0,i.jsx)(t.li,{children:"For automation, a CI pipeline should be set up to generate and update the coverage report whenever changes are made to the repository."}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,i.jsx)(t.p,{children:"Integration testing verifies that multiple components or modules work correctly together. The integration testing process follows these principles:"}),"\n",(0,i.jsx)(t.h4,{id:"testing-use-cases",children:"Testing Use Cases"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Each use case, as described in the system\u2019s sequence diagrams, will be tested."}),"\n",(0,i.jsx)(t.li,{children:"External input will be simulated using mock objects."}),"\n",(0,i.jsx)(t.li,{children:"The expected output must be validated using predefined test data."}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"automation-of-tests",children:"Automation of Tests"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Integration tests will be fully automated and will not require manual data entry."}),"\n",(0,i.jsx)(t.li,{children:"Test scripts will execute test scenarios and verify expected outcomes without human intervention."}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"acceptance-test",children:"Acceptance Test"}),"\n",(0,i.jsx)(t.p,{children:"Acceptance testing confirms that the software meets both functional and non-functional requirements. The acceptance testing strategy includes:"}),"\n",(0,i.jsx)(t.h4,{id:"demonstrating-functional-and-non-functional-requirements",children:"Demonstrating Functional and Non-Functional Requirements"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Functional tests will be derived from user stories and use cases."}),"\n",(0,i.jsx)(t.li,{children:"Non-functional requirements, such as performance and security, will be manually validated where necessary."}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"combination-of-automated-and-manual-testing",children:"Combination of Automated and Manual Testing"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Automated tests will handle functional validation."}),"\n",(0,i.jsx)(t.li,{children:"Manual tests will be performed where observation and subjective evaluation are required."}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"documentation-of-results",children:"Documentation of Results"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Test results should be documented and stored for reference."}),"\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.strong,{children:"Blank Sample Acceptance QA Testing doc.xlsx"})," should be used for structured test reporting."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(96540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);